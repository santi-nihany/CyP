8. Resolver con PMS (Pasaje de Mensajes SINCRÓNICOS) el siguiente problema. En un
examen final hay P alumnos y 3 profesores. Cuando todos los alumnos han llegado
comienza el examen. Cada alumno resuelve su examen, lo entrega y espera a que alguno de
los profesores lo corrija y le indique la nota. Los profesores corrigen los exámenes
respectando el orden en que los alumnos van entregando. Nota: maximizar la concurrencia
y no generar demora innecesaria.

(Alumnos) llegue -> (Admin)
(Admin) comienza -> (Alumnos)
(Alumno[idA]) termine, idA -> (Admin)
(Profe[idProfe]) corregir, idProfe -> (Admin)
(Admin) idProfe -> (Alumno[idA])
(Admin) idA -> (Profe[idProfe])
(Alumno) examen -> (Profe[idProfe])
(Profe[idProfe]) nota -> (Alumno[idA])


Process Alumno[idA:1..P]
{
    Admin!llegue();
    Admin?comienza();
    e = hacerExamen();
    Admin!termine(idA);
    Admin?recibir(idProfe);
    Profesor[idProfe]!entregar(e);
    Profesor[idA]?nota(nota);
}

Process Profesor[idProfe:1..3]
{
    while(true){
        Admin!corregir(idProfe);
        Admin?alumno(idA);
        Alumno[idProfe]?entregar(e);
        nota = correccion(e);
        Alumno[idA]!nota(nota);
    }
}

Process Admin{
    cant = 0;
    cola buffer;
    cola colaProfes;
    
    do  (cant <P); Alumno[*]?llegue() -> cant++; // Uso "do" para poder usar Alumno[*]

    for[i:1..P]{
        Alumno[i]!comienza();   // avisar a los alumnos que comienza el examen
    }

    // do modo buffer
    do  Alumno[*]?termine(idA) -> push(buffer, idA);                                        // esperar a que termine un alumno y encolarlo
        not empty(buffer); Profesor[*]?corregir(idProfe) -> pop(buffer, idA);               // si hay alumnos que entregaron, esperar a que un profe este listo para corregir
                                                            Profesor[idProfe]!alumno(idA);  // avisar al profe el alumno que le entregará su examen 
                                                            Alumno[idA]!recibir(idProfe);   // avisar al alumno el profe al que deberá entregarle su examen
    od;  
}